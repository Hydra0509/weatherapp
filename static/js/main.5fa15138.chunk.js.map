{"version":3,"sources":["App.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kKAEMA,EACC,mCADDA,EAEE,2CA8DOC,MA5Df,WAAgB,IAAD,EAEUC,mBAAS,IAFnB,mBAERC,EAFQ,KAEFC,EAFE,OAGcF,mBAAS,IAHvB,mBAGRG,EAHQ,KAGAC,EAHA,KA6BX,OACE,yBAAKC,UAAmC,oBAAhBF,EAAQG,MAAyBH,EAAQG,KAAKC,KAAO,GAAM,WAAsB,OACzG,8BACE,yBAAKF,UAAU,cACb,2BACAG,KAAK,OACLH,UAAU,aACVI,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAGT,EAASS,EAAEC,OAAOC,QAChCA,MAAOZ,EACPa,WAlCK,SAAAC,GACG,UAAZA,EAAIC,KACNC,MAAK,UAAKnB,EAAL,qBAA0BG,EAA1B,+BAAsDH,IACxDoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJnB,EAAS,IACTE,EAAWiB,GACXC,QAAQC,IAAIF,UA8Ba,oBAAhBlB,EAAQG,KACf,6BACF,yBAAKD,UAAU,gBACf,uBAAGA,UAAU,YAAYF,EAAQqB,KAAjC,MAA0CrB,EAAQsB,IAAIC,SACtD,uBAAGrB,UAAU,QA5BD,SAACsB,GACnB,IAGIC,EAFO,CAAC,gBAAS,OAAQ,SAAU,qBAAa,YAAU,UAAW,eAE1DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALS,CAAC,YAAU,aAAW,aAAW,aAAW,WAAS,YAAU,YAAU,YAAa,aAAc,aAAW,WAAY,YAKrHL,EAAEM,YACjBC,EAAOP,EAAEQ,cACb,MAAM,GAAN,OAAUD,EAAV,cAAoBF,EAApB,cAA+BF,EAA/B,cAAyCF,GAoBdQ,CAAY,IAAIC,OACrC,uBAAGhC,UAAU,QAAQiC,KAAKC,MAAMpC,EAAQG,KAAKC,MAA7C,SACA,uBAAGF,UAAU,WAAWF,EAAQA,QAAQ,GAAGG,QAItC,MCrDbkC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.5fa15138.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nconst api = {\n  key: \"fd0a0766724e6100565dbde33790fc14\" ,\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\nfunction App() {\n\nconst [query,setQuery] = useState('');\nconst [weather,setWeather] = useState({});\n\nconst search = evt => {\n  if (evt.key === \"Enter\") {\n    fetch (`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(result => {\n        setQuery('');\n        setWeather(result);\n        console.log(result)\n      })\n  }\n}\n\n\nconst dateBuilder = (d) => {\n  let months = [\"Január\", \"Február\", \"Március\", \"Április\", \"Május\", \"Június\", \"Július\", \"Augusztus\", \"Szeptember\", \"Október\", \"November\", \"December\"]\n  let days = [\"Hétfő\", \"Kedd\", \"Szerda\", \"Csütörtök\", \"Péntek\", \"Szombat\", \"Vasárnap\"];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()]\n  let year = d.getFullYear();\n  return `${year} | ${month} | ${date} | ${day}`\n  }\n{\n    return (\n      <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'App warm' : 'App') : 'App'}>\n      <main>\n        <div className=\"search-box\">\n          <input\n          type=\"text\"\n          className=\"search-bar\"\n          placeholder=\"Search City\"\n          onChange={e =>setQuery(e.target.value)}\n          value={query}\n          onKeyPress={search}\n          />\n        </div>\n        {(typeof weather.main != \"undefined\") ? ( \n          <div>\n        <div className=\"location-box\">\n        <p className=\"location\">{weather.name} , {weather.sys.country}</p>\n        <p className=\"date\">{dateBuilder(new Date())}</p>\n        <p className=\"temp\">{Math.round(weather.main.temp)}°C</p>\n        <p className=\"weather\">{weather.weather[0].main}</p>\n        </div>\n        </div>\n        \n        ) : ('')}\n\n      </main>\n      </div>\n\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}